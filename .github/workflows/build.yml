name: üê≥ Build And Push Docker Image
on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: The tag to push to the Docker registry.
        # required: true
        # default: latest

jobs:
  build:
    name: üê≥ Build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üßë‚Äçüíª Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: ‚éî Setup node
        uses: actions/setup-node@v4

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: Create .env file
        run: |
          echo "PORT_API=${{ secrets.PORT_API }}" > ${{ github.workspace }}/.env
          echo "PGHOST=${{ secrets.PGHOST }}" >> ${{ github.workspace }}/.env
          echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> ${{ github.workspace }}/.env
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> ${{ github.workspace }}/.env
          echo "PGPORT=${{ secrets.PGPORT }}" >> ${{ github.workspace }}/.env
          echo "PGUSER=${{ secrets.PGUSER }}" >> ${{ github.workspace }}/.env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> ${{ github.workspace }}/.env
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.PAYPAL_CLIENT_ID }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.PAYPAL_CLIENT_SECRET }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.REFRESH_TOKEN_GOOGLE }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.REDIRECT_URI_GOOGLE }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.CLIENT_SECRET_GOOGLE }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.CLIENT_ID_GOOGLE }}" >> ${{ github.workspace }}/.env
          echo "APP_ENV=${{ secrets.REACT_APP_SENTRY_DSN }}" >> ${{ github.workspace }}/.env


      - name: Upload .env
        uses: actions/upload-artifact@v4
        with:
          name: .env
          include-hidden-files: true
          path: ${{ github.workspace }}/.env

      - name: Build project
        run: npm run build

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Setup cache
      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üê≥ Build Production Image
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: natixe28/boutique-noname:production
          build-args: |
            COMMIT_SHA=${{ github.sha }} \
            PORT_API=${{ secrets.PORT_API }} \
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          
      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache